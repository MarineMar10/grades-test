---
title: "Martinez"
author: "Marine Martinez"
format: html
---
```{r}
library(vroom)
library(here)
library(dplyr)
library(tidyr)
library(ggplot2)
here::i_am("grades-test.Rproj")
```
## Question 1 Load the data set.
```{r}
grades <- vroom(here("grades.csv"))
```
## Question 2 Give the number of grades in the data set directly in the text of your quarto file, in a sentence of the form “The data set contains xxx grades.” where xxx is replaced by the number of grades. This must be computed from the data set.
The data set contains 68018 grades.

## Question 3: Use distinct() compute the number of students on the data set and report the value directly in the text as in the previous question.
```{r}
#| include: false
grades|>
  distinct(id)|>
  summarise(n())
```
The number of student is 962. 

## Question 4: Create a students data frame that contains one row per student and two variables, id and group that gives the assignment of each student to their group. Make sure that each student appears on only once in the data frame. Include a short extract of the data frame in the quarto rendering.
```{r}
grades|>
  distinct(id, group)|>
  slice_sample(n=5)|>
  knitr::kable()
```
## Question 5 Use a graphical representation to display the number of students per group.
```{r}
grades |>
  distinct(id, group)|>
  group_by(group)|>
  summarise(nb=n())|>
  mutate(group = factor(group, ordered = TRUE, levels = 1:20))|>
  ggplot(aes(x=group, y=nb))+
  geom_col()+
  xlab("Group")+
  ylab("Number")+
  ggtitle("Distribution of students in groups")
```
##Question 6: Compute the average of all the grades in Spirituality and Rituals in each group and display graphically this average as a function of the group. It is recommend to use geom_col() for this task (read the documentation!).
```{r}
library(stringr)
grades |>
  filter(str_detect(course,"Spirituality and Rituals"))|>
  group_by(group)|>
  summarise(Mean=mean(grade))|>
  mutate(group = factor(group, ordered = TRUE, levels = 1:20))|>
  ggplot(aes(x=group, y=Mean, fill=group))+
  geom_col()+
  xlab("Group")+
  ylab("Mean")+
  ggtitle("Distribution of mean in groups")
```

## Question 7 Compare graphically the distribution of the grades of the 2 semesters.
```{r}
grades |>
  mutate(semester = factor(semester, ordered = TRUE, levels = 1:2))|>
  ggplot(aes(x=grade, y=semester, fill=semester))+
  geom_boxplot()+
  xlab("Grade")+
  ylab("Semester")+
  ggtitle("Distribution of grades between semester")
```
## Question 8 Compute the number of grades per student and include in your quarto rendering an extract of the resulting data frame. Make sure to keep in the data frame the id of the students but also their group. Include in the text a markdown table with the minimum, maximum, average and median number of grades per student.
```{r}
grades|>
  group_by(id, group)|>
  summarise(nb_grades= n(), .groups= "drop")|>
  slice_sample(n=5)|>
  knitr::kable()
```
```{r}
#| include: false
grades|>
  group_by(id)|>
  summarise(max =max(grade),
            median= median(grade),
            min= min(grade),
            mean(grade))|>
  slice_sample(n=5)
```
2nd part of the question: 
| id | max |median|min  |mean |
|----|-----|------|-----|------|
| 480|  19 | 9,50 | 3.0 | 10.07
| 277| 16.5| 18.5| 3.0  | 9.6|
| 565| 18.5| 10.70| 3.0| 10.8|
| 841| 17.3| 9.9| 5.5| 10.5|
| 774| 17 | 9.45| 3.0 | 9.5|

## Question 9: Create a data frame that gives for each student their id, their group and the number of grades they obtained in Music and Dance and include in the quarto rendering a small extract of the result.
```{r}
grades|>
  filter(str_detect(course,"Music and Dance"))|>
  group_by(id, group)|>
  summarise(nb_grades= n(), .groups= "drop")|>
  slice_sample(n=5)|>
  knitr::kable()
```
## Question 10: Compute from the previous data frame the distribution of the number of grades, that is for each number of grades (e.g. 10) the number of students who have exactly this number of grades in Music and Dance. Represent graphically the results.
```{r}
grades|>
  filter(str_detect(course,"Music and Dance"))|>
  group_by(id, group)|>
  summarise(nb_grades= n(), .groups= "drop")|>
  mutate(nb_grades = factor(nb_grades, ordered = TRUE, levels = 1:9))|>
  ggplot(aes(x=nb_grades, fill=nb_grades))+
  geom_bar()+
  xlab("Number of grades")+
  ylab("Number of student")+
  ggtitle("Distribution of the number of grades in Music and Dance")
```
## Question 11: Using a graphical representation to study whether the number of grades per student in Music and Dance depends on the group.
```{r}
grades|>
  filter(str_detect(course,"Music and Dance"))|>
  group_by(id, group)|>
  summarise(nb_grades= n(), .groups= "drop")|>
  mutate(nb_grades = factor(nb_grades, ordered = TRUE, levels = 1:9))|>
  mutate(group = factor(group, ordered = TRUE, levels = 1:20))|>
  ggplot(aes(x=nb_grades, fill=group))+
  geom_bar(position= "fill")+
  xlab("Number of grades")+
  ylab("Number of student")+
  ggtitle("Distribution of the number of grades in Music and Dance")
```
## Question 12 Create a data frame that gives for each student their id, their group and the average of grades they obtained in each course. Using an adapted pivoting method, create a new data frame with one row per student and 12 columns: one for the id, one for the group and one per course. Include in the quarto rendering a small extract of the data frame with the id and group columns and with two of the course columns. 
```{r}
grades |>
  group_by(course,id, group)|>
  summarise(means= mean(grade), .groups= "drop")|>
  pivot_wider(names_from = course,
              values_from = means,
              id_cols= c(id, group))|>
  select(1:4)|>
  slice_sample(n=5)|>
  knitr::kable()
```
## Question 13: Show the average grades in Spirituality and Rituals as a function of the average grades in Buddhist Philosophy and Meditation. Make sure to maximise the readability of the proposed representation
```{r}
grades |>
  group_by(course,id, group)|>
  summarise(means= mean(grade), .groups= "drop")|>
  pivot_wider(names_from = course,
              values_from = means,
              id_cols= c(id, group))|>
  ggplot(aes(x=`Spirituality and Rituals`, y= `Buddhist Philosophy and Meditation`))+
  geom_point(alpha= 0.3)+
  ggtitle("Correlation of subjects")
```
## Question 14 The cor() function computes the correlation coefficient between two vectors. It can be used as a summary function in dplyr. Using it, compute the correlation between the average grades in Spirituality and Rituals and the average grades in Architecture and Sculpture group by group.
```{r}
grades |>
  group_by(course,id, group)|>
  summarise(means= mean(grade), .groups= "drop")|>
  pivot_wider(names_from = course,
              values_from = means,
              id_cols= c(id, group))|>
  group_by(group)|>
  summarise(correlation= cor(`Spirituality and Rituals`, `Architecture and Sculpture`))|>
  slice_sample(n=10)|>
  knitr::kable()
```
## Question 15 Display the average grades in Spirituality and Rituals as a function the average grades in Architecture and Sculpture for the students of the group in which those grades are the most correlated (positively or negatively).
```{r}
grades |>
  group_by(course,id, group)|>
  summarise(means= mean(grade), .groups= "drop")|>
  pivot_wider(names_from = course,
              values_from = means,
              id_cols= c(id, group))|>
   group_by(group)|>
   summarise(correlation= cor(`Spirituality and Rituals`, `Architecture and Sculpture`))|>
  arrange(desc(correlation))

grades |>
  group_by(course,id, group)|>
  summarise(means= mean(grade), .groups= "drop")|>
  pivot_wider(names_from = course,
              values_from = means,
              id_cols= c(id, group))|>
  filter(group ==2)|>
  ggplot(aes(x=`Spirituality and Rituals`, y=`Architecture and Sculpture`))+
  geom_point(alpha=0.2)+
  ggtitle("Correlation of subjects for group 2")
```
## Question 16: Let us assume that the final grade of a student is the average of the averages of their grades for each course. Create a data frame with three columns, id, group and final grade based on this definition for the last column. Sort the data frame in decrease order of final grade and include in the quarto rendering its first five rows.
```{r}
grades |>
  group_by(id, group)|>
  summarise(final= mean(grade), .groups = "drop")|>
  arrange(desc(final))|>
  slice(1:5)|>
  knitr::kable()
```
## Question 17 Find a way to study differences in final grades between groups
```{r}
grades |>
  group_by(id, group)|>
  summarise(final= mean(grade))|>
  mutate(group = factor(group, ordered = TRUE, levels = 1:20))|>
  ggplot(aes(x=group, y=final))+
  geom_col()
```

